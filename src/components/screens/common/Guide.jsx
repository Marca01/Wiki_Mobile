import React, { useState } from "react";
import { View, Text, TouchableOpacity, FlatList } from "react-native";
import { globalStyles } from "../../../styles/global";
import { FontAwesome } from "@expo/vector-icons";
import Accordion from "react-native-collapsible/Accordion";
const data_guide = [
  {
    title: "T√¨m ki·∫øm tr√™n Google",
    syntax: ":search + n·ªôi dung mu·ªën t√¨m",
    example: "':search chatbot l√† g√¨'",
    description: "Wiki s·∫Ω gi√∫p b·∫°n t√¨m ki·∫øm th√¥ng tin tr√™n Google d·ªÖ d√†ng."
  },
  {
    title: "T√¨m ki·∫øm tr√™n Wikipedia",
    syntax: ":wiki + n·ªôi dung mu·ªën t√¨m",
    example: "':wiki xe h∆°i'",
    description: "Wiki s·∫Ω t√¨m gi√∫p b·∫°n th√¥ng tin ƒë√£ ƒë∆∞·ª£c t√≥m g·ªçn l·∫°i b·ªüi wikipedia."
  },
  {
    title: "T√≠nh to√°n c√°c ph√©p t√≠nh ƒë∆°n gi·∫£n",
    syntax: "B·∫°n c√≥ th·ªÉ h·ªèi c√°c c√¢u li√™n quan t·ªõi t√≠nh to√°n nh∆∞ '1 + 2 b·∫±ng m·∫•y' ho·∫∑c ch·ªâ ƒë∆°n gi·∫£n l√† nh·∫Øn '2 * 3'",
    example: "'23 * 78 b·∫±ng m·∫•y?'",
    description: "Wiki s·∫Ω gi√∫p b·∫°n t√≠nh to√°n c√°c ph√©p t√≠nh t∆∞·ªüng ch·ª´ng nh∆∞ kh√¥ng h·ªÅ kh√≥ m√† l·∫°i kh√≥ kh√¥ng t∆∞·ªüng üòÅ."
  },
  {
    title: "Chuy·ªÉn h√¨nh ·∫£nh c√≥ ch·ªØ th√†nh vƒÉn b·∫£n",
    syntax: ":totext ho·∫∑c :totext&eng + ·∫£nh c√≥ ch·ªØ",
    example: "':totext + h√¨nh ·∫£nh'",
    description: `Wiki s·∫Ω gi√∫p b·∫°n chuy·ªÉn ƒë·ªïi h√¨nh ·∫£nh c√≥ ch·ªØ th√†nh vƒÉn b·∫£n v√† c√≥ th·ªÉ d·ªÖ d√†ng copy ƒë·ªÉ d√πng cho m·ª•c ƒë√≠ch c√° nh√¢n. \nS·∫Ω c√≥ 2 ng√¥n ng·ªØ ƒë∆∞·ª£c chuy·ªÉn th√†nh vƒÉn b·∫£n l√† ti·∫øng Vi·ªát v√† ti·∫øng Anh. ·ªû ƒë√¢y :totext s·∫Ω m·∫∑c ƒë·ªãnh l√† ti·∫øng Vi·ªát v√† :totext&eng s·∫Ω l√† ti·∫øng Anh.`
  },
  {
    title: "G·ª£i √Ω phim d·ª±a tr√™n th·ªÉ lo·∫°i",
    syntax: ":movie + th·ªÉ lo·∫°i phim",
    example: "':movie superhero'",
    description:
      "Wiki s·∫Ω g·ª£i √Ω c√°c phim li√™n quan ƒë·∫øn th·ªÉ lo·∫°i b·∫°n nh·∫≠p v√†o.     L∆∞u √Ω l√† ph·∫ßn l·ªõn c√°c phim ƒë∆∞·ª£c g·ª£i √Ω l√† nh·ªØng phim c≈©, c√≥ nh·ªØng       phim t·ª´ nh·ªØng nƒÉm 19xx :v do d·ªØ li·ªáu ƒë∆∞·ª£c s·ª≠ d·ª•ng ƒë√£ c≈©."
  }
];

export default function Guide({ navigation }) {
  const [activeSection, setActiveSection] = useState([]);
  const GuideItem = ({ title, syntax, example, description }) => {
    return (
      <View style={globalStyles.guideFeature}>
        <Text style={globalStyles.guideFeature_body}>
          <Text style={globalStyles.guideFeature_syntax}>
            C√∫ ph√°p {syntax} {"\n"}
            V√≠ d·ª•: {example}
          </Text>
          {"\n"}
          <Text style={globalStyles.guideFeature_description}>M√¥ t·∫£: {description}</Text>
        </Text>
      </View>
    );
  };

  return (
    <View style={globalStyles.container}>
      <View style={globalStyles.guideHeader}>
        <View style={globalStyles.guideHeader_title}>
          <Text>ƒê√¢y l√† trang h∆∞·ªõng d·∫´n c√°c t√≠nh nƒÉng c·ªßa wiki chatbot</Text>
        </View>
        <TouchableOpacity onPress={() => navigation.goBack()}>
          <FontAwesome name="times" size={24} color="black" />
        </TouchableOpacity>
      </View>
      <Accordion
        sections={data_guide}
        activeSections={activeSection}
        renderHeader={section => <Text style={globalStyles.guideFeature_title}>{section.title}</Text>}
        renderContent={GuideItem}
        onChange={activeSections => setActiveSection(activeSections)}
        underlayColor="transparent"
      />
      {/* <FlatList ListFooterComponent={<View height={50} />} data={data_guide} renderItem={GuideItem} keyExtractor={(_, index) => index} /> */}
      {/* google search */}
    </View>
  );
}
